{"version":3,"file":"index.cjs26.js","sources":["../src/components/ui/form.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { Slot } from '@radix-ui/react-slot';\nimport {\n\tController,\n\tFormProvider,\n\tuseFormContext,\n\tuseFormState,\n\ttype ControllerProps,\n\ttype FieldPath,\n\ttype FieldValues,\n} from 'react-hook-form';\n\nimport { cn } from '@/lib/utils';\nimport { Label } from '@/components/ui/label';\n\nconst Form = FormProvider;\n\ntype FormFieldContextValue<\n\tTFieldValues extends FieldValues = FieldValues,\n\tTName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> = {\n\tname: TName;\n};\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>({} as FormFieldContextValue);\n\nconst FormField = <\n\tTFieldValues extends FieldValues = FieldValues,\n\tTName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n\t...props\n}: ControllerProps<TFieldValues, TName>) => {\n\treturn (\n\t\t<FormFieldContext.Provider value={{ name: props.name }}>\n\t\t\t<Controller {...props} />\n\t\t</FormFieldContext.Provider>\n\t);\n};\n\nconst useFormField = () => {\n\tconst fieldContext = React.useContext(FormFieldContext);\n\tconst itemContext = React.useContext(FormItemContext);\n\tconst { getFieldState } = useFormContext();\n\tconst formState = useFormState({ name: fieldContext.name });\n\tconst fieldState = getFieldState(fieldContext.name, formState);\n\n\tif (!fieldContext) {\n\t\tthrow new Error('useFormField should be used within <FormField>');\n\t}\n\n\tconst { id } = itemContext;\n\n\treturn {\n\t\tid,\n\t\tname: fieldContext.name,\n\t\tformItemId: `${id}-form-item`,\n\t\tformDescriptionId: `${id}-form-item-description`,\n\t\tformMessageId: `${id}-form-item-message`,\n\t\t...fieldState,\n\t};\n};\n\ntype FormItemContextValue = {\n\tid: string;\n};\n\nconst FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue);\n\nfunction FormItem({ className, ...props }: React.ComponentProps<'div'>) {\n\tconst id = React.useId();\n\n\treturn (\n\t\t<FormItemContext.Provider value={{ id }}>\n\t\t\t<div data-slot=\"form-item\" className={cn('grid gap-2', className)} {...props} />\n\t\t</FormItemContext.Provider>\n\t);\n}\n\nfunction FormLabel({ className, ...props }: React.ComponentProps<typeof LabelPrimitive.Root>) {\n\tconst { error, formItemId } = useFormField();\n\n\treturn (\n\t\t<Label\n\t\t\tdata-slot=\"form-label\"\n\t\t\tdata-error={!!error}\n\t\t\tclassName={cn('data-[error=true]:text-destructive', className)}\n\t\t\thtmlFor={formItemId}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction FormControl({ ...props }: React.ComponentProps<typeof Slot>) {\n\tconst { error, formItemId, formDescriptionId, formMessageId } = useFormField();\n\n\treturn (\n\t\t<Slot\n\t\t\tdata-slot=\"form-control\"\n\t\t\tid={formItemId}\n\t\t\taria-describedby={!error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`}\n\t\t\taria-invalid={!!error}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction FormDescription({ className, ...props }: React.ComponentProps<'p'>) {\n\tconst { formDescriptionId } = useFormField();\n\n\treturn (\n\t\t<p\n\t\t\tdata-slot=\"form-description\"\n\t\t\tid={formDescriptionId}\n\t\t\tclassName={cn('text-muted-foreground text-sm', className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction FormMessage({ className, ...props }: React.ComponentProps<'p'>) {\n\tconst { error, formMessageId } = useFormField();\n\tconst body = error ? String(error?.message ?? '') : props.children;\n\n\tif (!body) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<p data-slot=\"form-message\" id={formMessageId} className={cn('text-destructive text-sm', className)} {...props}>\n\t\t\t{body}\n\t\t</p>\n\t);\n}\n\nexport { useFormField, Form, FormItem, FormLabel, FormControl, FormDescription, FormMessage, FormField };\n"],"names":["Form","FormProvider","FormFieldContext","React","FormField","props","Controller","useFormField","fieldContext","itemContext","FormItemContext","getFieldState","useFormContext","formState","useFormState","fieldState","id","FormItem","className","cn","FormLabel","error","formItemId","Label","FormControl","formDescriptionId","formMessageId","Slot","FormDescription","FormMessage","body"],"mappings":"8fAgBMA,EAAOC,EAAAA,aASPC,EAAmBC,EAAM,cAAqC,EAA2B,EAEzFC,EAAY,CAGhB,CACD,GAAGC,CACJ,IAEGF,EAAA,cAAAD,EAAiB,SAAjB,CAA0B,MAAO,CAAE,KAAMG,EAAM,IAC/C,CAAA,EAAAF,EAAA,cAACG,EAAY,WAAA,CAAA,GAAGD,EAAO,CACxB,EAIIE,EAAe,IAAM,CACpB,MAAAC,EAAeL,EAAM,WAAWD,CAAgB,EAChDO,EAAcN,EAAM,WAAWO,CAAe,EAC9C,CAAE,cAAAC,CAAc,EAAIC,iBAAe,EACnCC,EAAYC,EAAAA,aAAa,CAAE,KAAMN,EAAa,KAAM,EACpDO,EAAaJ,EAAcH,EAAa,KAAMK,CAAS,EAE7D,GAAI,CAACL,EACE,MAAA,IAAI,MAAM,gDAAgD,EAG3D,KAAA,CAAE,GAAAQ,GAAOP,EAER,MAAA,CACN,GAAAO,EACA,KAAMR,EAAa,KACnB,WAAY,GAAGQ,CAAE,aACjB,kBAAmB,GAAGA,CAAE,yBACxB,cAAe,GAAGA,CAAE,qBACpB,GAAGD,CACJ,CACD,EAMML,EAAkBP,EAAM,cAAoC,EAA0B,EAE5F,SAASc,EAAS,CAAE,UAAAC,EAAW,GAAGb,GAAsC,CACjE,MAAAW,EAAKb,EAAM,MAAM,EAEvB,uBACEO,EAAgB,SAAhB,CAAyB,MAAO,CAAE,GAAAM,EAClC,EAAAb,EAAA,cAAC,OAAI,YAAU,YAAY,UAAWgB,EAAAA,GAAG,aAAcD,CAAS,EAAI,GAAGb,EAAO,CAC/E,CAEF,CAEA,SAASe,EAAU,CAAE,UAAAF,EAAW,GAAGb,GAA2D,CAC7F,KAAM,CAAE,MAAAgB,EAAO,WAAAC,CAAW,EAAIf,EAAa,EAG1C,OAAAJ,EAAA,cAACoB,EAAA,MAAA,CACA,YAAU,aACV,aAAY,CAAC,CAACF,EACd,UAAWF,EAAAA,GAAG,qCAAsCD,CAAS,EAC7D,QAASI,EACR,GAAGjB,CAAA,CACL,CAEF,CAEA,SAASmB,EAAY,CAAE,GAAGnB,GAA4C,CACrE,KAAM,CAAE,MAAAgB,EAAO,WAAAC,EAAY,kBAAAG,EAAmB,cAAAC,CAAA,EAAkBnB,EAAa,EAG5E,OAAAJ,EAAA,cAACwB,EAAA,KAAA,CACA,YAAU,eACV,GAAIL,EACJ,mBAAmBD,EAAiC,GAAGI,CAAiB,IAAIC,CAAa,GAA9D,GAAGD,CAAiB,GAC/C,eAAc,CAAC,CAACJ,EACf,GAAGhB,CAAA,CACL,CAEF,CAEA,SAASuB,EAAgB,CAAE,UAAAV,EAAW,GAAGb,GAAoC,CACtE,KAAA,CAAE,kBAAAoB,CAAkB,EAAIlB,EAAa,EAG1C,OAAAJ,EAAA,cAAC,IAAA,CACA,YAAU,mBACV,GAAIsB,EACJ,UAAWN,EAAAA,GAAG,gCAAiCD,CAAS,EACvD,GAAGb,CAAA,CACL,CAEF,CAEA,SAASwB,EAAY,CAAE,UAAAX,EAAW,GAAGb,GAAoC,CACxE,KAAM,CAAE,MAAAgB,EAAO,cAAAK,CAAc,EAAInB,EAAa,EACxCuB,EAAOT,EAAQ,OAAOA,GAAO,SAAW,EAAE,EAAIhB,EAAM,SAE1D,OAAKyB,EAKH3B,EAAA,cAAA,IAAA,CAAE,YAAU,eAAe,GAAIuB,EAAe,UAAWP,EAAAA,GAAG,2BAA4BD,CAAS,EAAI,GAAGb,GACvGyB,CACF,EANO,IAQT"}